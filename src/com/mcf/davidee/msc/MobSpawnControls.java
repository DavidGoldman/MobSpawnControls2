package com.mcf.davidee.msc;


import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;

import net.minecraft.server.MinecraftServer;
import net.minecraft.world.WorldServer;
import net.minecraft.world.storage.SaveHandler;

import com.mcf.davidee.msc.config.SpawnConfiguration;
import com.mcf.davidee.msc.forge.CommonProxy;
import com.mcf.davidee.msc.forge.SpawnFreqTicker;
import com.mcf.davidee.msc.network.ClientPacketHandler;
import com.mcf.davidee.msc.network.ServerPacketHandler;
import com.mcf.davidee.msc.reflect.BiomeClassLoader;
import com.mcf.davidee.msc.spawning.MobHelper;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.PostInit;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.Mod.ServerStarting;
import cpw.mods.fml.common.Mod.ServerStopping;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import cpw.mods.fml.common.event.FMLServerStoppingEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkMod.SidedPacketHandler;
import cpw.mods.fml.common.registry.TickRegistry;
import cpw.mods.fml.relauncher.Side;

@Mod( modid = "MSC2", name="Mob Spawn Controls 2", dependencies = "after:*", version="b2.5.0")
@NetworkMod(
		clientSideRequired = false,
		serverSideRequired = false,
		clientPacketHandlerSpec = @SidedPacketHandler(channels = "msc2", packetHandler = ClientPacketHandler.class),
		serverPacketHandlerSpec = @SidedPacketHandler(channels = "msc2", packetHandler = ServerPacketHandler.class)
		)

public class MobSpawnControls{

	@SidedProxy(clientSide = "com.mcf.davidee.msc.forge.ClientProxy", serverSide = "com.mcf.davidee.msc.forge.CommonProxy")
	public static CommonProxy proxy;
	@Instance("MSC2")
	public static MobSpawnControls instance;
	
	public static String version = "";

	private static FileHandler logHandler = null;
	private static Logger logger = Logger.getLogger("MobSpawnControls");


	public static Logger getLogger() {
		return logger;
	}

	private SpawnConfiguration config, defaultConfig;


	@PreInit 
	public void preInit(FMLPreInitializationEvent event) {
		ModMetadata modMeta = event.getModMetadata();
		modMeta.authorList = Arrays.asList(new String[] { "Davidee" });
		modMeta.autogenerated = false;
		version = modMeta.version;
		modMeta.credits = "Thanks to Mojang, Forge, and all your support.";
		modMeta.description = "Allows you to control the vanilla spawning system.";
		modMeta.url = "http://www.minecraftforum.net/topic/1553186-151/";
	}

	@Init
	public void load(FMLInitializationEvent event) {
		logger.setLevel(Level.ALL);

		try {
			File logfile = new File(proxy.getMinecraftDirectory(),"MobSpawnControls.log");
			if ((logfile.exists() || logfile.createNewFile()) && logfile.canWrite() && logHandler == null)	{
				logHandler = new FileHandler(logfile.getPath());
				logHandler.setFormatter(new LogFormatter());
				logger.addHandler(logHandler);
			}
		} catch (SecurityException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		logger.info("Mob Spawn Controls initializing...");

		TickRegistry.registerScheduledTickHandler(new SpawnFreqTicker(), Side.SERVER);
	}

	@PostInit
	public void modsLoaded(FMLPostInitializationEvent event) {
		BiomeClassLoader.loadBiomeClasses();
		logger.info("Generating default creature type map...");
		MobHelper.populateDefaultMap();
		logger.info("Mapping biomes...");
		BiomeNameHelper.initBiomeMap();
		logger.info("Creating default spawn configuration...");
		defaultConfig = new SpawnConfiguration(new File(new File(proxy.getMinecraftDirectory(),"config"),"default_msc"));
		defaultConfig.load();
		defaultConfig.save();
	}

	@ServerStarting 
	public void serverStarting(FMLServerStartingEvent event) {
		MinecraftServer server = event.getServer();
		WorldServer world = server.worldServerForDimension(0);
		if (world != null && world.getSaveHandler() instanceof SaveHandler){
			logger.info("Creating spawn configuration for World \"" + world.getSaveHandler().getWorldDirectoryName() + "\"");
			config = new SpawnConfiguration(new File(((SaveHandler)world.getSaveHandler()).getWorldDirectory(),"msc"), defaultConfig);
			config.load();
			config.save();
		}
	}

	@ServerStopping
	public void serverStopping(FMLServerStoppingEvent event) {
		logger.info("Unloading spawn configuration");
		config = null;
	}

	public SpawnConfiguration getConfigNoThrow() {
		return config;
	}

	public SpawnConfiguration getConfig() throws RuntimeException {
		if (config != null)
			return config;
		throw new RuntimeException("MSC: Null Spawn Config");
	}


}
